/* Contenedor principal del formulario */
.formContainer {
    background-color: #FFFFFF;
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
    border: 1px solid #E0E0E0;
    border-radius: 0.5rem;
    padding: 1.5rem;
    width: 100%;
    max-width: 768px;
    margin: 0 auto 2rem auto;
}

/* Media query para ajustar padding en pantallas más grandes */
@media (min-width: 768px) { /* md breakpoint */
    .formContainer {
        padding: 2rem; /* Aumenta el padding en pantallas grandes */
    }
}

/* Contenedor general para agrupar FormGroups con espaciado */
.formGroupContainer {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* Espacio vertical entre grupos de formulario */
}

/* Grid para campos cuantitativos (Valor actual, Valor cuantitativo, Unidad de medida) */
.formGrid {
    display: grid;
    grid-template-columns: 1fr; /* Una columna por defecto en móviles */
    gap: 1rem; /* Espacio entre campos */
}

/* Media query para layout de 3 columnas en desktop */
@media (min-width: 768px) { /* md breakpoint */
    .formGrid {
        grid-template-columns: repeat(3, 1fr); /* 3 columnas de igual ancho */
        gap: 1.5rem; /* Aumenta el espacio entre columnas en pantallas grandes */
    }
}

/* Grid para campos de fecha (Fecha de inicio, Fecha de finalización) */
.dateFieldsGrid {
    display: grid;
    grid-template-columns: 1fr; /* Una columna por defecto en móviles */
    gap: 1rem; /* Espacio vertical entre campos de fecha en móviles */
}

/* Media query para layout de 2 columnas en desktop */
@media (min-width: 768px) { /* md breakpoint */
    .dateFieldsGrid {
        grid-template-columns: repeat(2, 1fr); /* 2 columnas de igual ancho */
        gap: 1.5rem; /* Aumenta el espacio entre columnas en pantallas grandes */
    }
}

/* Estilos para el checkbox */
.checkboxLabel {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-foreground);
    font-size: 0.9rem;
}

.checkboxLabel input[type="checkbox"] {
    width: 1.1rem;
    height: 1.1rem;
    accent-color: var(--color-primary); /* Colorea el checkbox */
}

/* Contenedores de botones (nuevo) */
.buttonContainer {
    display: flex;
    justify-content: space-between; /* Por defecto, el botón de crear/guardar a la derecha */
    gap: 1rem; /* Espacio entre botones */
    border-top: 1px solid var(--color-border); /* Línea divisoria, opcional */
}

.firstObjectiveButtons {
    /* Cuando es el primer objetivo, el botón "Crear Objetivo" se mantiene a la derecha. */
    /* No se añade botón de cancelar, así que flex-end es suficiente. */
    justify-content: flex-end;
}

.otherObjectiveButtons {
    /* Cuando NO es el primer objetivo, y es creación, los botones se distribuyen */
    justify-content: space-between;
}

.editModeButtons {
    /* En modo edición, los botones "Guardar Cambios" y "Cancelar" están fuera del form,
       en EditGoalPage.module.css. Aquí, si este estilo se aplica,
       significa que se ha pasado `isEditMode={true}` a ObjetivosForm,
       lo cual debería hacer que el botón de cancelar dentro de ObjetivosForm no se renderice.
       Por lo tanto, este contenedor solo tendrá el botón de guardar. */
    justify-content: flex-end; /* El botón de guardar se alinea a la derecha */
}

.cancelButton {
    background-color: var(--color-muted); /* Color para el botón de cancelar en el formulario */
    color: var(--color-muted-foreground);
    border: 1px solid var(--color-border);

    /* Estilos al pasar el ratón */
    &:hover {
        background-color: var(--color-accent);
        color: var(--color-accent-foreground);
    }
}