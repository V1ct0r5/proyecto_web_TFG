/* GoalDetailPage.module.css */

.pageContainer {
    font-family: 'Inter', sans-serif;
    color: var(--foreground);
    background-color: var(--background);
    width: 100%;
    margin: 0 auto; /* Centrado horizontal */
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.goalTitleContainer {
    display: flex;
    /* align-items: center; */ /* Comentado si se prefiere alineación a la izquierda para multilínea */
    flex-direction: column;
    align-items: flex-start; /* Asegura alineación izquierda para nombre y etiqueta */
}

.goalName {
    font-size: 1.6rem;
    font-weight: 600;
    color: var(--foreground);
    margin: 0;
}

.categoryTag {
    background-color: var(--muted);
    color: var(--primary);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    margin-top: 0.25rem; /* Pequeño espacio si el título es largo y la etiqueta va debajo */
}

.headerActions {
    display: flex;
    gap: 1rem; /* Espacio entre botones de acción */
}

/* Estilos comunes para botones de acción */
.editButton,
.updateProgressButton,
.deleteButton {
    padding: 0.6rem 1.2rem;
    border-radius: var(--radius);
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s;
}

.editButton {
    background-color: var(--background);
    color: var(--primary);
    border: 1px solid var(--primary);
}

.editButton:hover {
    background-color: var(--muted);
    border-color: var(--primary-hover);
    color: var(--primary-hover);
}

.updateProgressButton {
    background-color: var(--primary);
    color: var(--primary-foreground);
    border: none;
}

.updateProgressButton:hover {
    background-color: var(--primary-hover);
}

.deleteButton {
    background-color: var(--background);
    color: var(--destructive);
    border: 1px solid var(--destructive);
    display: flex;
    align-items: center;
    gap: 0.5rem; /* Espacio para el icono si se añade dentro */
}

.deleteButton:hover {
    background-color: color-mix(in srgb, var(--destructive) 10%, transparent);
    color: var(--destructive); /* Mantener el color original o definir --destructive-hover si es necesario */
    border-color: var(--destructive); /* Mantener el color original o definir --destructive-hover si es necesario */
}

.goalDescriptionText {
    font-size: 0.9rem;
    color: var(--muted-foreground);
    margin-top: 0.25rem; /* Espacio debajo del nombre/categoría del objetivo */
}

.topCardsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Cuadrícula adaptable */
    gap: 1.2rem;
    margin-bottom: 1.5rem;
}

.card {
    background-color: var(--card);
    border-radius: 12px; /* Bordes más redondeados para las tarjetas */
    box-shadow: var(--shadow-sm); /* Usar variable de sombra */
    padding: 1.2rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Asegura que el contenido se distribuya verticalmente */
    min-height: 220px; /* Altura mínima para consistencia visual */
    transition: all 0.3s ease;
}

.card:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-md); /* Usar variable de sombra */
}

.cardTitle {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--card-foreground);
    margin-top: 0;
    margin-bottom: 0.5rem; /* Espacio después del título de la tarjeta */
    align-self: flex-start; /* Alinea el título a la izquierda */
}

.progressCard {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.progressChartWrapper {
    width: 100px;
    height: 100px;
    margin-top: 1.2rem;
    margin-bottom: 1.2rem;
    position: relative; /* Para posicionar elementos internos si es necesario */
    display: flex;
    justify-content: center;
    align-items: center;
}

.progressValues {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin-top: 1rem;
    width: 100%;
    max-width: 250px; /* Limita el ancho para mejor lectura */
    gap: 1rem;
}

.progressValueItem {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1; /* Distribución equitativa del espacio */
}

.valueLabel {
    font-size: 0.9rem;
    color: var(--muted-foreground);
    margin-bottom: 0.2rem;
}

.valueNumber {
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--card-foreground);
}

.dataCard {
    display: flex;
    flex-direction: column;
}

.dataList {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* Espacio entre elementos de la lista de datos */
}

.dataListItem {
    display: flex;
    align-items: center;
    gap: 0.8rem; /* Espacio entre icono/etiqueta y valor */
    font-size: 0.9rem;
}

.dataLabel {
    color: var(--muted-foreground);
    flex-basis: 100px; /* Ancho base para la etiqueta */
    text-align: left;
}

.dataValue {
    color: var(--card-foreground);
    font-weight: 500;
    text-align: right;
    flex-grow: 1; /* Permite que el valor ocupe el espacio restante */
}

.icon {
    color: var(--muted-foreground);
    font-size: 1rem;
    min-width: 18px; /* Asegura espacio para el icono */
}

.overdue { /* Para valores de fecha límite vencidos */
    color: var(--destructive);
    font-weight: 600;
}

/* Clases para indicadores de tendencia */
.trendUp, .trendUpText {
    color: var(--primary); /* Color para tendencia positiva */
}

.trendDown, .trendDownText {
    color: var(--destructive); /* Color para tendencia negativa */
}

.distributionCard {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.barChartPlaceholder { /* Contenedor para la gráfica de barras simple */
    display: flex;
    height: 120px;
    width: 60%; /* Ancho relativo de la gráfica */
    margin: 1rem auto 1.5rem;
    border-radius: 8px;
    overflow: hidden; /* Para los bordes redondeados de las barras internas */
    align-items: flex-end; /* Las barras crecen desde abajo */
    gap: 8px; /* Espacio entre barras */
}

.completedBar, .remainingBar {
    width: 45%; /* Ancho de cada barra */
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 0.9rem;
    border-radius: 4px 4px 0 0; /* Bordes redondeados solo arriba */
    transition: height 0.5s ease-out;
    position: relative; /* Para posicionar el valor de la barra */
}

.completedBar {
    background-color: var(--chart-bar-completed-bg); /* Usar variable del tema */
    border: 1px solid var(--chart-bar-completed-border); /* Usar variable del tema */
    order: 1;
}

.remainingBar {
    background-color: var(--chart-bar-remaining-bg); /* Usar variable del tema */
    border: 1px solid var(--chart-bar-remaining-border); /* Usar variable del tema */
    order: 2;
}

.barValue { /* Texto del valor dentro de cada barra */
    position: absolute;
    top: 5px;
    left: 50%;
    transform: translateX(-50%);
    color: #fff;
    font-weight: 500;
    font-size: 0.8rem;
    z-index: 1;
}

.distributionLabels { /* Etiquetas debajo de la gráfica de barras */
    display: flex;
    justify-content: space-around;
    width: 80%;
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: var(--muted-foreground);
    gap: 1rem;
}

.distributionLabelItem {
    flex: 1;
    text-align: center;
}

.overdueMessage { /* Mensaje destacado para objetivos vencidos */
    background-color: var(--destructive-soft-bg); /* Usar variable del tema */
    border: 1px solid var(--destructive);
    color: var(--destructive);
    padding: 0.8rem;
    border-radius: var(--radius);
    margin-top: 1.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 0.85rem;
    width: 95%; /* Ocupa casi todo el ancho disponible en su contenedor */
}

.overdueIcon {
    font-size: 1.8rem;
    margin-bottom: 0.4rem;
}

.overdueMessage p { /* Estilo para párrafos dentro del mensaje de vencimiento */
    margin: 0.2rem 0;
}

.progressHistoryCard { /* Tarjeta para el historial de progreso */
    grid-column: 1 / -1; /* Ocupa todo el ancho de la cuadrícula */
    margin-bottom: 1.5rem;
}

.progressHistoryHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.timeframeSelect { /* Selector de rango de tiempo para el historial */
    padding: 0.4rem 0.8rem;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    font-size: 0.85rem;
    color: var(--muted-foreground);
    background-color: var(--card);
    cursor: pointer;
    appearance: none; /* Quita la apariencia nativa del select */
    /* Icono de flecha personalizado para el select */
    background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2020%2020%22%3E%3Cpath%20d%3D%22M9.293%2012.95l.707.707L15.657%208l-1.414-1.414L10%2010.828%205.757%206.586%204.343%208z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E');
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 0.8em;
    padding-right: 2rem; /* Espacio para el icono de flecha */
}

.chartArea { /* Área para mostrar la gráfica de historial */
    min-height: 300px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--muted);
    border-radius: var(--radius);
    border: 1px dashed var(--border); /* Borde discontinuo si no hay datos */
}

.noDataMessage { /* Mensaje si no hay datos para la gráfica */
    color: var(--muted-foreground);
    font-style: italic;
    text-align: center;
    padding: 1rem;
}

.editFormContainer { /* Contenedor para el formulario de edición (si se muestra en la misma página) */
    background-color: var(--card);
    box-shadow: var(--shadow-md); /* Usar variable de sombra */
    border: 1px solid var(--border); /* Usar variable de borde */
    border-radius: 12px; 
    padding: 2rem;
    margin-top: 2rem;
}

.chartContainer {
    position: relative;
}

/* Media Queries para responsividad */
@media (max-width: 992px) { /* Pantallas medianas/tablets pequeñas */
    .topCardsGrid {
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Mantiene adaptabilidad */
    }
}

@media (max-width: 768px) { /* Tablets en vertical y móviles grandes */
    .header {
        flex-direction: column;
        align-items: flex-start; /* Título y botones se alinean a la izquierda */
        gap: 0.8rem;
    }

    .headerActions {
        width: 100%; /* Botones ocupan todo el ancho */
        justify-content: flex-start; /* Botones se alinean al inicio */
        gap: 0.6rem;
    }

    .editButton, 
    .updateProgressButton, 
    .deleteButton {
        flex: 1; /* Botones comparten espacio equitativamente */
        text-align: center;
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
    }

    .topCardsGrid {
        grid-template-columns: 1fr; /* Una columna para las tarjetas superiores */
    }

    .card {
        padding: 1rem; /* Menos padding en tarjetas */
    }

    .cardTitle {
        margin-bottom: 0.8rem;
    }

    .barChartPlaceholder {
        width: 90%; /* Gráfica de barras más ancha en móviles */
    }
}

@media (max-width: 480px) { /* Móviles pequeños */
    .pageContainer {
        padding: 0.8rem; /* Menos padding general en la página */
    }

    .goalName {
        font-size: 1.3rem;
    }

    .categoryTag {
        font-size: 0.7rem;
    }

    .valueNumber {
        font-size: 1.2rem;
    }

    .dataLabel {
        flex-basis: 70px; /* Reduce el ancho base de las etiquetas de datos */
    }
}

/* Add this block for dark theme specific styles */
html[data-theme='dark'] {
    .card {
        border: 1px solid var(--border-light); /* Differentiated border in dark mode */
    }
}