.dashboardContainer {
    padding: 1.5rem;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    box-sizing: border-box;
}

.pageHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.pageTitleActual {
    font-size: 1.75rem;
    color: var(--heading-color, var(--foreground));
    margin: 0;
    font-weight: 600;
}

.createButtonTopRight {
    white-space: nowrap;
    margin-top: 0 !important;
}

.topControlBar {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    align-items: flex-end;
}

.searchFormGroup,
.filterFormGroup,
.sortFormGroup {
    min-width: 0;
}

@media (min-width: 768px) and (max-width: 1023px) {
    .topControlBar {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (min-width: 1024px) {
    .topControlBar {
        grid-template-columns: 2fr 1.5fr 1.5fr auto;
    }
}

.goalsGrid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: 1fr;
}
@media (min-width: 768px) and (max-width: 1023px) {
    .goalsGrid {
        grid-template-columns: repeat(2, 1fr);
    }
}
@media (min-width: 1024px) {
    .goalsGrid {
        grid-template-columns: repeat(3, 1fr);
    }
}

.centeredStatus {
    text-align: center; padding: 2rem; border-radius: var(--radius);
    margin-top: 0; display: flex; flex-direction: column;
    align-items: center; justify-content: center; gap: 1rem;
}
.noGoalsMessage { font-size: 1.1rem; color: var(--muted-foreground); }
.errorMessage { color: var(--destructive); }
.errorMessageSecondary { font-size: 0.9rem; color: var(--muted-foreground); }
.errorMessageTop {
    color: var(--destructive-foreground); background-color: var(--destructive);
    padding: 0.75rem 1rem; border-radius: var(--radius); font-size: 0.9rem;
    display: flex; justify-content: space-between; align-items: center;
}
.viewMoreContainer { display: flex; justify-content: center; margin-top: 1rem; }

.checkboxGroup {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding-bottom: 0.6rem; 
    gap: 0.5rem;
    position: relative;
}

/* --- INICIO DE LA CORRECCIÓN --- */
/* Se apunta a la clase específica .hiddenCheckbox para evitar conflictos */
.hiddenCheckbox {
    position: absolute;
    opacity: 0;
    width: 20px;
    height: 20px;
    cursor: pointer;
    margin: 0; /* Asegurarse de que no tenga márgenes */
}
/* --- FIN DE LA CORRECCIÓN --- */

.checkboxLabel {
    margin: 0;
    font-size: 0.9rem;
    color: var(--foreground);
    cursor: pointer;
    white-space: nowrap;
    display: flex;
    align-items: center;
    gap: 0.6rem; 
}

.checkboxLabel::before {
    content: '';
    display: inline-block;
    width: 18px;
    height: 18px;
    border: 2px solid var(--primary-color, #4F46E5);
    border-radius: 4px;
    background-color: var(--card-background, #ffffff);
    transition: all 0.2s ease;
}

/* El selector "+" funciona porque el input y el label son hermanos */
.hiddenCheckbox:checked + .checkboxLabel::before {
    background-color: var(--primary-color, #4F46E5);
    border-color: var(--primary-color, #4F46E5);
}

.checkboxLabel::after {
    content: '';
    position: absolute;
    left: 6px;
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    opacity: 0;
    transition: opacity 0.2s ease;
}

.hiddenCheckbox:checked + .checkboxLabel::after {
    opacity: 1;
}

.hiddenCheckbox:focus + .checkboxLabel::before {
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.4);
}